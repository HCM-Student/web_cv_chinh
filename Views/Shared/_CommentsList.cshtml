@model IEnumerable<WEB_CV.Models.BinhLuan>

@if (Model.Any())
{
    <div class="comments-section">
        <div class="comments-header">
            <h5 class="comments-title">
                <i class="fas fa-comments me-2"></i>
                Bình luận
                <span class="comment-count">@Model.Count()</span>
            </h5>
            <div class="comments-stats">
                <span class="stat-item">
                    <i class="fas fa-check-circle text-success me-1"></i>
                    @Model.Count(c => c.TrangThai == 1) đã duyệt
                </span>
            </div>
        </div>
        
        <div class="comments-list">
            @foreach (var comment in Model)
            {
                <div class="comment-item @(comment.NguoiDung != null ? "registered-user" : "guest-user")" data-comment-id="@comment.Id">
                    <div class="comment-avatar">
                        @if (comment.NguoiDung != null && !string.IsNullOrEmpty(comment.NguoiDung.Avatar))
                        {
                            <img src="@comment.NguoiDung.Avatar" alt="Avatar" class="avatar-img">
                        }
                        else
                        {
                            <div class="avatar-placeholder">
                                <i class="fas fa-user"></i>
                            </div>
                        }
                        @if (comment.NguoiDung != null)
                        {
                            <div class="user-badge">
                                <i class="fas fa-check"></i>
                            </div>
                        }
                    </div>
                    
                    <div class="comment-content">
                        <div class="comment-header">
                            <div class="author-info">
                                <div class="author-name-row">
                                    <h6 class="comment-author">
                                        @if (comment.NguoiDung != null)
                                        {
                                            @comment.NguoiDung.HoTen
                                        }
                                        else
                                        {
                                            @comment.HoTen
                                        }
                                    </h6>
                                    @if (comment.NguoiDung != null)
                                    {
                                        @if (comment.NguoiDung.VaiTro == "Admin")
                                        {
                                            <span class="user-role admin">QUẢN TRỊ</span>
                                        }
                                        else
                                        {
                                            <span class="user-role">THÀNH VIÊN</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="user-role guest">KHÁCH</span>
                                    }
                                </div>
                            </div>
                            <div class="comment-meta">
                                <span class="comment-date">
                                    <i class="fas fa-clock me-1"></i>
                                    @comment.Ngay.ToString("dd/MM/yyyy HH:mm")
                                </span>
                                <div class="comment-actions">
                                    <button class="action-btn like-btn" title="Thích" onclick="toggleLike(@comment.Id, this)">
                                        <i class="far fa-heart"></i>
                                        <span class="like-count">0</span>
                                    </button>
                                    <button class="action-btn reply-btn" title="Trả lời" onclick="replyToComment(@comment.Id, '@(comment.NguoiDung?.HoTen ?? comment.HoTen ?? "Khách")')">
                                        <i class="fas fa-reply"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="comment-text">
                            @comment.NoiDung
                        </div>
                        
                        <!-- Replies Section -->
                        @if (comment.Replies != null && comment.Replies.Any())
                        {
                            <div class="replies-section">
                                @foreach (var reply in comment.Replies.OrderBy(r => r.Ngay))
                                {
                                    <div class="reply-item @(reply.NguoiDung != null ? "registered-user" : "guest-user")" data-comment-id="@reply.Id">
                                        <div class="reply-avatar">
                                            @if (reply.NguoiDung != null && !string.IsNullOrEmpty(reply.NguoiDung.Avatar))
                                            {
                                                <img src="@reply.NguoiDung.Avatar" alt="Avatar" class="avatar-img">
                                            }
                                            else
                                            {
                                                <div class="avatar-placeholder">
                                                    <i class="fas fa-user"></i>
                                                </div>
                                            }
                                            @if (reply.NguoiDung != null)
                                            {
                                                <div class="user-badge">
                                                    <i class="fas fa-check"></i>
                                                </div>
                                            }
                                        </div>
                                        
                                        <div class="reply-content">
                                            <div class="reply-header">
                                                <div class="author-info">
                                                    <div class="author-name-row">
                                                        <h6 class="comment-author">
                                                            @(reply.NguoiDung?.HoTen ?? reply.HoTen ?? "Khách")
                                                        </h6>
                                                        @if (reply.NguoiDung != null)
                                                        {
                                                            @if (reply.NguoiDung.VaiTro == "Admin")
                                                            {
                                                                <span class="user-role admin">QUẢN TRỊ</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="user-role">THÀNH VIÊN</span>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <span class="user-role guest">KHÁCH</span>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="comment-meta">
                                                    <span class="comment-date">
                                                        <i class="fas fa-clock me-1"></i>
                                                        @reply.Ngay.ToString("dd/MM/yyyy HH:mm")
                                                    </span>
                                                </div>
                                            </div>
                                            
                                            <div class="comment-text">
                                                @reply.NoiDung
                                            </div>
                                            
                                            <div class="comment-footer">
                                                <div class="comment-reactions">
                                                    <button class="reaction-btn" onclick="addReaction(@reply.Id, 'like', this)" title="Thích">
                                                        <i class="far fa-thumbs-up"></i>
                                                    </button>
                                                    <button class="reaction-btn" onclick="addReaction(@reply.Id, 'love', this)" title="Yêu thích">
                                                        <i class="far fa-heart"></i>
                                                    </button>
                                                    <button class="reaction-btn" onclick="addReaction(@reply.Id, 'smile', this)" title="Cười">
                                                        <i class="far fa-smile"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        
                        <div class="comment-footer">
                            <div class="comment-reactions">
                                <button class="reaction-btn" onclick="addReaction(@comment.Id, 'like', this)" title="Thích">
                                    <i class="far fa-thumbs-up"></i>
                                </button>
                                <button class="reaction-btn" onclick="addReaction(@comment.Id, 'love', this)" title="Yêu thích">
                                    <i class="far fa-heart"></i>
                                </button>
                                <button class="reaction-btn" onclick="addReaction(@comment.Id, 'smile', this)" title="Cười">
                                    <i class="far fa-smile"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="no-comments">
        <div class="no-comments-icon">
            <i class="fas fa-comment-slash"></i>
        </div>
        <h6>Chưa có bình luận nào</h6>
        <p>Hãy là người đầu tiên chia sẻ suy nghĩ của bạn!</p>
        <div class="no-comments-cta">
            <i class="fas fa-arrow-up"></i>
            <span>Viết bình luận ở trên</span>
        </div>
    </div>
}

<style>
/* ===== COMMENTS SECTION ===== */
.comments-section {
    margin-top: 2rem;
    background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    border-radius: 20px;
    border: 1px solid #e9ecef;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0,0,0,0.08);
}

.comments-header {
    background: linear-gradient(135deg, #4f46e5, #06b6d4);
    padding: 1.5rem 2rem;
    color: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
}

.comments-title {
    color: white;
    font-weight: 700;
    margin: 0;
    font-size: 1.3rem;
    display: flex;
    align-items: center;
}

.comment-count {
    background: rgba(255,255,255,0.2);
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.9rem;
    margin-left: 0.5rem;
    backdrop-filter: blur(10px);
}

.comments-stats {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.stat-item {
    background: rgba(255,255,255,0.15);
    padding: 0.5rem 1rem;
    border-radius: 25px;
    font-size: 0.9rem;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255,255,255,0.2);
}

.comments-list {
    padding: 2rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* ===== COMMENT ITEM ===== */
.comment-item {
    display: flex;
    gap: 1rem;
    padding: 1.25rem;
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.06);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid #e9ecef;
    position: relative;
    overflow: hidden;
    margin-bottom: 1rem;
}

.comment-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: linear-gradient(135deg, #4f46e5, #06b6d4);
    transition: width 0.3s ease;
}

.comment-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0,0,0,0.12);
}

.comment-item:hover::before {
    width: 6px;
}

.comment-item.registered-user {
    border-left: 4px solid #28a745;
}

.comment-item.guest-user {
    border-left: 4px solid #ffc107;
}

/* ===== AVATAR ===== */
.comment-avatar {
    flex-shrink: 0;
    width: 60px;
    height: 60px;
    position: relative;
}

.avatar-img {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid #fff;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
}

.avatar-img:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(0,0,0,0.15);
}

.avatar-placeholder {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #4f46e5, #06b6d4);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
    transition: all 0.3s ease;
}

.avatar-placeholder:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(79, 70, 229, 0.4);
}

.user-badge {
    position: absolute;
    bottom: -2px;
    right: -2px;
    width: 20px;
    height: 20px;
    background: #28a745;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.7rem;
    border: 2px solid white;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

/* ===== COMMENT CONTENT ===== */
.comment-content {
    flex: 1;
    min-width: 0;
}

.comment-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.75rem;
    gap: 1rem;
    flex-wrap: wrap;
}

.author-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.author-name-row {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex-wrap: wrap;
    margin-bottom: 0.25rem;
}

.comment-author {
    color: #2c3e50;
    font-weight: 700;
    margin: 0;
    font-size: 1.1rem;
    line-height: 1.2;
}

.user-role {
    font-size: 0.7rem;
    padding: 0.2rem 0.6rem;
    border-radius: 8px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.3px;
    white-space: nowrap;
}

.registered-user .user-role {
    background: #d4edda;
    color: #155724;
}

.registered-user .user-role.admin {
    background: linear-gradient(135deg, #dc3545, #c82333);
    color: white;
    box-shadow: 0 2px 4px rgba(220, 53, 69, 0.25);
    position: relative;
    font-size: 0.65rem;
    padding: 0.25rem 0.7rem;
}

.registered-user .user-role.admin::before {
    content: "👑";
    margin-right: 4px;
    font-size: 8px;
}

.guest-user .user-role {
    background: #fff3cd;
    color: #856404;
}

.comment-meta {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 0.4rem;
    min-width: 0;
}

.comment-date {
    color: #6c757d;
    font-size: 0.85rem;
    display: flex;
    align-items: center;
    background: #f8f9fa;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
}

.comment-actions {
    display: flex;
    gap: 0.4rem;
    flex-wrap: wrap;
}

.action-btn {
    background: none;
    border: none;
    color: #6c757d;
    padding: 0.5rem;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.85rem;
}

.action-btn:hover {
    background: #f8f9fa;
    color: #4f46e5;
    transform: translateY(-1px);
}

.like-btn:hover {
    color: #e74c3c;
}

.reply-btn:hover {
    color: #3498db;
}

.comment-text {
    color: #495057;
    line-height: 1.7;
    font-size: 1rem;
    white-space: pre-wrap;
    margin-bottom: 1rem;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 12px;
    border-left: 3px solid #e9ecef;
}

.comment-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 0.75rem;
    border-top: 1px solid #f1f3f4;
}

.comment-reactions {
    display: flex;
    gap: 0.5rem;
}

.reaction-btn {
    background: none;
    border: none;
    color: #adb5bd;
    padding: 0.5rem;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 1rem;
}

.reaction-btn:hover {
    background: #f8f9fa;
    color: #4f46e5;
    transform: scale(1.1);
}

/* ===== NO COMMENTS ===== */
.no-comments {
    text-align: center;
    padding: 4rem 2rem;
    color: #6c757d;
    background: linear-gradient(135deg, #f8f9fa, #ffffff);
    border-radius: 20px;
    margin: 2rem;
}

.no-comments-icon {
    font-size: 4rem;
    color: #adb5bd;
    margin-bottom: 1.5rem;
    opacity: 0.7;
}

.no-comments h6 {
    color: #495057;
    font-weight: 600;
    margin-bottom: 0.5rem;
    font-size: 1.2rem;
}

.no-comments p {
    margin: 0 0 1.5rem 0;
    font-size: 1rem;
    opacity: 0.8;
}

.no-comments-cta {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: #4f46e5;
    font-weight: 600;
    padding: 0.75rem 1.5rem;
    background: rgba(79, 70, 229, 0.1);
    border-radius: 25px;
    border: 1px solid rgba(79, 70, 229, 0.2);
    transition: all 0.3s ease;
}

.no-comments-cta:hover {
    background: rgba(79, 70, 229, 0.15);
    transform: translateY(-2px);
    text-decoration: none;
    color: #4f46e5;
}

/* ===== RESPONSIVE ===== */
@@media (max-width: 768px) {
    .comments-section {
        margin: 1rem;
        border-radius: 15px;
    }
    
    .comments-header {
        padding: 1rem 1.5rem;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
    }
    
    .comments-list {
        padding: 1.5rem;
    }
    
    .comment-item {
        flex-direction: column;
        gap: 0.75rem;
        padding: 1rem;
    }
    
    .comment-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }
    
    .comment-meta {
        align-items: flex-start;
        width: 100%;
    }
    
    .comment-actions {
        justify-content: flex-start;
    }
    
    .comment-footer {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
    }
    
    .comment-reactions {
        justify-content: flex-start;
    }
}

@@media (max-width: 480px) {
    .comments-header {
        padding: 1rem;
    }
    
    .comments-list {
        padding: 1rem;
    }
    
    .comment-item {
        padding: 1rem;
    }
    
    .comment-avatar {
        width: 50px;
        height: 50px;
    }
    
    .avatar-img,
    .avatar-placeholder {
        width: 50px;
        height: 50px;
    }
}

/* ===== INTERACTIVE STATES ===== */
.like-btn.liked {
    color: #e74c3c !important;
    background: rgba(231, 76, 60, 0.1) !important;
}

.like-btn.liked i {
    color: #e74c3c;
}

.reaction-btn.active {
    color: #4f46e5 !important;
    background: rgba(79, 70, 229, 0.1) !important;
    transform: scale(1.1);
}

.reaction-btn.active i {
    color: #4f46e5;
}

.like-btn:hover i,
.reaction-btn:hover i {
    transform: scale(1.1);
    transition: transform 0.2s ease;
}

/* Replies Section */
.replies-section {
    margin-top: 1rem;
    padding-left: 1.5rem;
    border-left: 2px solid #e9ecef;
    background: #f8f9fa;
    border-radius: 0 8px 8px 0;
    padding: 1rem;
    margin-left: 0.5rem;
}

.reply-item {
    display: flex;
    margin-bottom: 0.75rem;
    padding: 0.875rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.08);
    transition: all 0.3s ease;
    gap: 0.75rem;
}

.reply-item:last-child {
    margin-bottom: 0;
}

.reply-item:hover {
    box-shadow: 0 2px 6px rgba(0,0,0,0.12);
    transform: translateY(-1px);
}

.reply-avatar {
    position: relative;
    flex-shrink: 0;
}

.reply-avatar .avatar-img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    object-fit: cover;
}

.reply-avatar .avatar-placeholder {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 14px;
}

.reply-avatar .user-badge {
    position: absolute;
    bottom: -2px;
    right: -2px;
    width: 12px;
    height: 12px;
    background: #28a745;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid white;
}

.reply-avatar .user-badge i {
    font-size: 8px;
    color: white;
}

.reply-content {
    flex: 1;
    min-width: 0;
}

.reply-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.reply-header .author-info {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.reply-header .author-name-row {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-bottom: 0.2rem;
}

.reply-header .comment-author {
    margin: 0;
    font-size: 14px;
    font-weight: 600;
    color: #2c3e50;
}

.reply-header .user-role {
    font-size: 0.65rem;
    padding: 0.15rem 0.5rem;
    border-radius: 6px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.3px;
    white-space: nowrap;
}

.reply-header .user-role:not(.guest) {
    background: #e8f5e8;
    color: #28a745;
}

.reply-header .user-role.admin {
    background: linear-gradient(135deg, #dc3545, #c82333);
    color: white;
    box-shadow: 0 1px 3px rgba(220, 53, 69, 0.25);
    position: relative;
    font-size: 0.6rem;
    padding: 0.2rem 0.6rem;
}

.reply-header .user-role.admin::before {
    content: "👑";
    margin-right: 3px;
    font-size: 7px;
}

.reply-header .user-role.guest {
    background: #f8f9fa;
    color: #6c757d;
}

.reply-header .comment-meta {
    display: flex;
    align-items: center;
    gap: 10px;
}

.reply-header .comment-date {
    font-size: 12px;
    color: #6c757d;
    display: flex;
    align-items: center;
    gap: 4px;
}

.reply-item .comment-text {
    font-size: 14px;
    line-height: 1.5;
    color: #495057;
    margin-bottom: 10px;
    word-wrap: break-word;
}

.reply-item .comment-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.reply-item .comment-reactions {
    display: flex;
    gap: 8px;
}

.reply-item .reaction-btn {
    background: none;
    border: none;
    padding: 4px 8px;
    border-radius: 15px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 12px;
    color: #6c757d;
}

.reply-item .reaction-btn:hover {
    background: #f8f9fa;
    color: #495057;
    transform: scale(1.1);
}

.reply-item .reaction-btn.active {
    background: #e3f2fd;
    color: #1976d2;
}

/* Animation for reactions */
@@keyframes heartBeat {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

.like-btn.liked i {
    animation: heartBeat 0.6s ease-in-out;
}

@@keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-10px); }
    60% { transform: translateY(-5px); }
}

.reaction-btn.active {
    animation: bounce 0.6s ease-in-out;
}
</style>

<script>
// ===== LIKE FUNCTIONALITY =====
function toggleLike(commentId, button) {
    const icon = button.querySelector('i');
    const countSpan = button.querySelector('.like-count');
    let currentCount = parseInt(countSpan.textContent) || 0;
    
    // Toggle visual state
    if (button.classList.contains('liked')) {
        // Unlike
        button.classList.remove('liked');
        icon.className = 'far fa-heart';
        countSpan.textContent = Math.max(0, currentCount - 1);
        
        // Remove from localStorage
        const likedComments = JSON.parse(localStorage.getItem('likedComments') || '[]');
        const index = likedComments.indexOf(commentId);
        if (index > -1) {
            likedComments.splice(index, 1);
            localStorage.setItem('likedComments', JSON.stringify(likedComments));
        }
    } else {
        // Like
        button.classList.add('liked');
        icon.className = 'fas fa-heart';
        countSpan.textContent = currentCount + 1;
        
        // Add to localStorage
        const likedComments = JSON.parse(localStorage.getItem('likedComments') || '[]');
        if (!likedComments.includes(commentId)) {
            likedComments.push(commentId);
            localStorage.setItem('likedComments', JSON.stringify(likedComments));
        }
    }
    
    // Show feedback
    showReactionFeedback(button, 'liked');
}

// ===== REACTION FUNCTIONALITY =====
function addReaction(commentId, reactionType, button) {
    const icon = button.querySelector('i');
    
    // Toggle active state
    if (button.classList.contains('active')) {
        button.classList.remove('active');
        // Reset icon to outline
        switch(reactionType) {
            case 'like': icon.className = 'far fa-thumbs-up'; break;
            case 'love': icon.className = 'far fa-heart'; break;
            case 'smile': icon.className = 'far fa-smile'; break;
        }
    } else {
        // Remove active state from other reaction buttons in same comment
        const commentCard = button.closest('.comment-item');
        const otherReactions = commentCard.querySelectorAll('.reaction-btn');
        otherReactions.forEach(btn => btn.classList.remove('active'));
        
        // Activate current button
        button.classList.add('active');
        // Set icon to filled
        switch(reactionType) {
            case 'like': icon.className = 'fas fa-thumbs-up'; break;
            case 'love': icon.className = 'fas fa-heart'; break;
            case 'smile': icon.className = 'fas fa-smile'; break;
        }
    }
    
    // Save to localStorage
    const reactions = JSON.parse(localStorage.getItem('commentReactions') || '{}');
    if (button.classList.contains('active')) {
        reactions[commentId] = reactionType;
    } else {
        delete reactions[commentId];
    }
    localStorage.setItem('commentReactions', JSON.stringify(reactions));
    
    // Show feedback
    showReactionFeedback(button, reactionType);
}

// ===== REPLY FUNCTIONALITY =====
function replyToComment(commentId, authorName) {
    // Dispatch custom event for reply
    const replyEvent = new CustomEvent('replyToComment', {
        detail: { commentId: commentId, authorName: authorName }
    });
    document.dispatchEvent(replyEvent);
    
    // Show reply indicator
    showReplyIndicator(commentId);
}

// ===== FEEDBACK FUNCTIONS =====
function showReactionFeedback(button, type) {
    // Create feedback element
    const feedback = document.createElement('div');
    feedback.className = 'reaction-feedback';
    feedback.innerHTML = getReactionEmoji(type);
    
    // Position feedback
    const rect = button.getBoundingClientRect();
    feedback.style.position = 'fixed';
    feedback.style.left = rect.left + rect.width / 2 + 'px';
    feedback.style.top = rect.top + 'px';
    feedback.style.pointerEvents = 'none';
    feedback.style.zIndex = '9999';
    feedback.style.fontSize = '1.5rem';
    feedback.style.animation = 'fadeUp 1s ease-out forwards';
    
    document.body.appendChild(feedback);
    
    // Remove after animation
    setTimeout(() => {
        if (feedback.parentNode) {
            feedback.parentNode.removeChild(feedback);
        }
    }, 1000);
}

function showReplyIndicator(commentId) {
    // Find the comment being replied to
    const commentItem = document.querySelector(`[data-comment-id="${commentId}"]`);
    if (commentItem) {
        commentItem.style.border = '2px solid #4f46e5';
        commentItem.style.boxShadow = '0 0 20px rgba(79, 70, 229, 0.3)';
        
        setTimeout(() => {
            commentItem.style.border = '';
            commentItem.style.boxShadow = '';
        }, 3000);
    }
}

function getReactionEmoji(type) {
    switch(type) {
        case 'like': return '👍';
        case 'love': return '❤️';
        case 'smile': return '😊';
        case 'liked': return '❤️';
        default: return '✨';
    }
}

// ===== LOAD SAVED REACTIONS =====
function loadSavedReactions() {
    // Load liked comments
    const likedComments = JSON.parse(localStorage.getItem('likedComments') || '[]');
    likedComments.forEach(commentId => {
        const likeBtn = document.querySelector(`[onclick*="toggleLike(${commentId}"]`);
        if (likeBtn) {
            likeBtn.classList.add('liked');
            const icon = likeBtn.querySelector('i');
            icon.className = 'fas fa-heart';
        }
    });
    
    // Load reactions
    const reactions = JSON.parse(localStorage.getItem('commentReactions') || '{}');
    Object.keys(reactions).forEach(commentId => {
        const reactionType = reactions[commentId];
        const reactionBtn = document.querySelector(`[onclick*="addReaction(${commentId}, '${reactionType}'"]`);
        if (reactionBtn) {
            reactionBtn.classList.add('active');
            const icon = reactionBtn.querySelector('i');
            switch(reactionType) {
                case 'like': icon.className = 'fas fa-thumbs-up'; break;
                case 'love': icon.className = 'fas fa-heart'; break;
                case 'smile': icon.className = 'fas fa-smile'; break;
            }
        }
    });
}

// ===== INITIALIZE =====
document.addEventListener('DOMContentLoaded', function() {
    loadSavedReactions();
});

// Add CSS for feedback animation
const style = document.createElement('style');
style.textContent = `
    @@keyframes fadeUp {
        0% {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
        100% {
            opacity: 0;
            transform: translateY(-30px) scale(1.2);
        }
    }
    
    .reaction-feedback {
        font-size: 1.5rem;
        pointer-events: none;
        z-index: 9999;
    }
`;
document.head.appendChild(style);
</script>
