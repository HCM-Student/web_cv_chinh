@model WEB_CV.Models.BaiViet
@using System.Globalization

@{
    // Ưu tiên VI; nếu người dùng chọn EN thì hiển thị bản EN (nếu có)
    bool isEn = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName == "en";

    string title    = isEn && !string.IsNullOrWhiteSpace(Model.TieuDeEn) ? Model.TieuDeEn! : Model.TieuDe;
    string? summary = isEn && !string.IsNullOrWhiteSpace(Model.TomTatEn) ? Model.TomTatEn : Model.TomTat;
    string content  = isEn && !string.IsNullOrWhiteSpace(Model.NoiDungEn) ? Model.NoiDungEn! : Model.NoiDung;

    // Chỉ dùng tên chuyên mục tiếng Việt (model chưa có TenEn)
    string categoryName = Model.ChuyenMuc?.Ten ?? "";

    ViewData["Title"] = title;

    // Ảnh cover + alt + description (SEO)
    string coverSrc = string.IsNullOrWhiteSpace(Model.AnhTieuDe) ? "/media/news-placeholder.jpg" : Model.AnhTieuDe!;
    if (!coverSrc.StartsWith("http", StringComparison.OrdinalIgnoreCase))
        coverSrc = "~/" + coverSrc.TrimStart('~','/').Replace("\\","/");
    var cover = Url.Content(coverSrc);
    var alt   = string.IsNullOrWhiteSpace(Model.AnhTieuDeAlt) ? title : Model.AnhTieuDeAlt!;
    var desc  = string.IsNullOrWhiteSpace(summary) ? title : summary!;
}

@section Head {
  <meta name="description" content="@desc" />
  <meta property="og:type" content="article" />
  <meta property="og:title" content="@title" />
  <meta property="og:description" content="@desc" />
  <meta property="og:image" content="@cover" />
  <meta property="og:image:alt" content="@alt" />
  <meta property="og:url" content="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}")" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="@title" />
  <meta name="twitter:description" content="@desc" />
}

<article class="container py-4">
  <div class="d-flex align-items-center justify-content-between mb-3">
    <h1 class="h3 mb-0">@title</h1>

    @* Nút đổi ngôn ngữ *@
    @{
        var returnUrl = Context.Request.Path + Context.Request.QueryString;
    }
    <div class="dropdown ms-3">
      <button class="btn btn-sm btn-outline-secondary rounded-pill px-3 dropdown-toggle" data-bs-toggle="dropdown" type="button">
        <i class="fa-solid fa-globe me-1"></i>@(isEn ? "English" : "Tiếng Việt")
      </button>
      <ul class="dropdown-menu dropdown-menu-end">
        <li><a class="dropdown-item @(isEn?"":"active")" href="@Url.Action("SetLanguage","Language", new { culture="vi-VN", returnUrl })">Tiếng Việt</a></li>
        <li><a class="dropdown-item @(isEn?"active":"")" href="@Url.Action("SetLanguage","Language", new { culture="en-US", returnUrl })">English</a></li>
      </ul>
    </div>
  </div>

  <figure class="mb-4">
    <img src="@cover" alt="@alt" class="img-fluid w-100" style="object-fit:cover;max-height:480px" loading="lazy" />
    @if (!string.IsNullOrWhiteSpace(Model.AnhTieuDeAlt))
    { <figcaption class="small text-muted mt-2">@Model.AnhTieuDeAlt</figcaption> }
  </figure>

  <div class="article-meta small text-muted mb-3">
    <div class="d-flex flex-wrap align-items-center gap-3">
      <span><i class="fas fa-calendar me-1"></i>@Model.NgayDang.ToString("dd/MM/yyyy HH:mm")</span>
      @if (!string.IsNullOrEmpty(categoryName)) { 
        <span><i class="fas fa-folder me-1"></i>@categoryName</span> 
      }
      @if (!string.IsNullOrEmpty(Model.TacGia?.HoTen)) { 
        <span><i class="fas fa-user me-1"></i>@Model.TacGia.HoTen</span> 
      }
      <span><i class="fas fa-eye me-1"></i>@Model.LuotXem lượt xem</span>
    </div>
  </div>

  @if (!string.IsNullOrWhiteSpace(summary))
  {
    <p class="lead">@Html.Raw(summary)</p>
  }

  <div class="article-body">
    @Html.Raw(content)
  </div>
  
  <!-- Chia sẻ mạng xã hội -->
  <partial name="_SocialShare" model="Model" />
  
  <!-- Form bình luận -->
  <partial name="_CommentForm" model="new WEB_CV.Models.BinhLuan { BaiVietId = Model.Id }" />
  
  <!-- Danh sách bình luận -->
  <div id="comments-container">
    <partial name="_CommentsList" model="new List<WEB_CV.Models.BinhLuan>()" />
  </div>
  
  <!-- Bài viết liên quan -->
  @if (ViewBag.RelatedPosts != null)
  {
    <partial name="_RelatedPosts" model="ViewBag.RelatedPosts" />
  }
</article>

<style>
  .article-body img{max-width:100%;height:auto}
  .article-body table{display:block;max-width:100%;overflow:auto}
  
  .article-meta {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 10px;
    border-left: 4px solid #4f46e5;
  }
  
  .article-meta span {
    display: flex;
    align-items: center;
    font-weight: 500;
  }
  
  .article-meta i {
    color: #4f46e5;
    width: 16px;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Load comments when page loads
    loadComments();
});

function loadComments() {
    fetch('@Url.Action("GetComments", "BinhLuan", new { baiVietId = Model.Id })')
        .then(response => response.text())
        .then(html => {
            document.getElementById('comments-container').innerHTML = html;
        })
        .catch(error => {
            console.error('Error loading comments:', error);
        });
}

// Reload comments after form submission
document.addEventListener('DOMContentLoaded', function() {
    const commentForm = document.querySelector('.comment-form');
    if (commentForm) {
        commentForm.addEventListener('submit', function(e) {
            // Let the form submit normally, then reload comments
            setTimeout(loadComments, 1000);
        });
    }
});
</script>
