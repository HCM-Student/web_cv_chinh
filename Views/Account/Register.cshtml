@model WEB_CV.Models.Account.RegisterVM
@{
    ViewData["Title"] = "Đăng ký";
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TTDL Phía Nam</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/auth.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
</head>
<body>
    <div class="auth-container">
        <!-- Floating background elements -->
        <div class="auth-floating-elements">
            <i class="auth-floating-icon bi bi-person-plus"></i>
            <i class="auth-floating-icon bi bi-shield-check"></i>
            <i class="auth-floating-icon bi bi-envelope"></i>
            <i class="auth-floating-icon bi bi-key-fill"></i>
            <i class="auth-floating-icon bi bi-check-circle"></i>
        </div>

        <div class="auth-card">
            <div class="auth-header">
                <div class="auth-logo mb-3">
                    <img src="~/img/logo.png" alt="Logo" class="auth-logo-img" />
                </div>
                <h1 class="auth-title">Tạo tài khoản mới</h1>
                <p class="auth-subtitle">Đăng ký để truy cập hệ thống và trải nghiệm dịch vụ</p>
            </div>

            <form asp-action="Register" method="post" novalidate>
                @Html.AntiForgeryToken()

                <div class="auth-form-group">
                    <label asp-for="HoTen" class="auth-label">
                        <i class="bi bi-person me-2"></i>Họ và tên
                    </label>
                    <input asp-for="HoTen" class="auth-input" type="text" placeholder="Nhập họ và tên đầy đủ" required />
                    <span asp-validation-for="HoTen" class="auth-error"></span>
                </div>

                <div class="auth-form-group">
                    <label asp-for="Email" class="auth-label">
                        <i class="bi bi-envelope me-2"></i>Email
                    </label>
                    <input asp-for="Email" class="auth-input" type="email" placeholder="Nhập địa chỉ email của bạn" required />
                    <span asp-validation-for="Email" class="auth-error"></span>
                </div>

                <div class="auth-form-group">
                    <label asp-for="MatKhau" class="auth-label">
                        <i class="bi bi-lock me-2"></i>Mật khẩu
                    </label>
                    <div class="position-relative">
                        <input asp-for="MatKhau" class="auth-input" type="password" placeholder="Nhập mật khẩu (tối thiểu 6 ký tự)" required />
                        <button type="button" class="password-toggle" onclick="togglePassword('MatKhau')">
                            <i class="bi bi-eye" id="eye-MatKhau"></i>
                        </button>
                    </div>
                    <div class="password-strength" id="passwordStrength">
                        <div class="password-strength-bar" id="strengthBar"></div>
                    </div>
                    <span asp-validation-for="MatKhau" class="auth-error"></span>
                </div>

                <div class="auth-form-group">
                    <label asp-for="XacNhanMatKhau" class="auth-label">
                        <i class="bi bi-lock-fill me-2"></i>Xác nhận mật khẩu
                    </label>
                    <div class="position-relative">
                        <input asp-for="XacNhanMatKhau" class="auth-input" type="password" placeholder="Nhập lại mật khẩu để xác nhận" required />
                        <button type="button" class="password-toggle" onclick="togglePassword('XacNhanMatKhau')">
                            <i class="bi bi-eye" id="eye-XacNhanMatKhau"></i>
                        </button>
                    </div>
                    <span asp-validation-for="XacNhanMatKhau" class="auth-error"></span>
                </div>

                <button type="submit" class="auth-btn" id="registerBtn">
                    <i class="bi bi-person-plus me-2"></i>
                    <span class="btn-text">Tạo tài khoản</span>
                    <span class="btn-loading d-none">
                        <i class="bi bi-arrow-clockwise spin me-2"></i>
                        Đang tạo tài khoản...
                    </span>
                </button>

                <div class="auth-footer">
                    <p class="mb-0">Đã có tài khoản? <a asp-action="Login" class="auth-link">Đăng nhập ngay</a></p>
                </div>
            </form>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/dist/jquery.validation.unobtrusive.min.js"></script>

    <script>
        // Password toggle functionality
        function togglePassword(fieldName) {
            const input = document.querySelector(`input[name="${fieldName}"]`);
            const eye = document.getElementById(`eye-${fieldName}`);
            
            if (input.type === 'password') {
                input.type = 'text';
                eye.classList.remove('bi-eye');
                eye.classList.add('bi-eye-slash');
            } else {
                input.type = 'password';
                eye.classList.remove('bi-eye-slash');
                eye.classList.add('bi-eye');
            }
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;
            
            const strengthBar = document.getElementById('strengthBar');
            strengthBar.className = 'password-strength-bar';
            
            if (strength <= 1) {
                strengthBar.classList.add('strength-weak');
            } else if (strength <= 2) {
                strengthBar.classList.add('strength-fair');
            } else if (strength <= 3) {
                strengthBar.classList.add('strength-good');
            } else {
                strengthBar.classList.add('strength-strong');
            }
        }

        // Add ripple effect to button
        document.querySelector('.auth-btn').addEventListener('click', function(e) {
            const button = e.currentTarget;
            const ripple = document.createElement('span');
            const rect = button.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;
            
            ripple.className = 'ripple';
            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';
            
            button.appendChild(ripple);
            setTimeout(() => ripple.remove(), 600);
        });

        // Password strength indicator
        const passwordInput = document.querySelector('input[name="MatKhau"]');
        const confirmPasswordInput = document.querySelector('input[name="XacNhanMatKhau"]');
        
        passwordInput.addEventListener('input', function() {
            checkPasswordStrength(this.value);
        });
        
        // Real-time password confirmation check
        confirmPasswordInput.addEventListener('input', function() {
            const password = passwordInput.value;
            const confirmPassword = this.value;
            
            if (confirmPassword && password !== confirmPassword) {
                this.style.borderColor = 'rgba(255, 107, 107, 0.5)';
            } else if (confirmPassword && password === confirmPassword) {
                this.style.borderColor = 'rgba(76, 175, 80, 0.5)';
            } else {
                this.style.borderColor = 'rgba(255, 255, 255, 0.2)';
            }
        });

        // Form submission with loading state
        document.querySelector('form').addEventListener('submit', function(e) {
            const btn = document.getElementById('registerBtn');
            const btnText = btn.querySelector('.btn-text');
            const btnLoading = btn.querySelector('.btn-loading');
            
            btn.disabled = true;
            btnText.classList.add('d-none');
            btnLoading.classList.remove('d-none');
        });

        // Input validation feedback
        document.querySelectorAll('.auth-input').forEach(input => {
            input.addEventListener('blur', function() {
                if (this.checkValidity()) {
                    this.style.borderColor = 'rgba(76, 175, 80, 0.5)';
                } else {
                    this.style.borderColor = 'rgba(255, 107, 107, 0.5)';
                }
            });
        });

        // Page fade in animation
        document.addEventListener('DOMContentLoaded', function() {
            document.body.classList.add('loaded');
        });
    </script>
</body>
</html>
