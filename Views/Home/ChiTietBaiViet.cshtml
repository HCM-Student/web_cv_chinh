@using WEB_CV.Models
@model ChiTietBaiVietVM
@{
    ViewData["Title"] = Model.BaiViet.TieuDe;
}

@Html.AntiForgeryToken()

<!-- ===================== BREADCRUMB ===================== -->
<section class="breadcrumb-section py-3 bg-light">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")" class="text-decoration-none">Trang chủ</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("TinTuc", "Home")" class="text-decoration-none">Tin tức</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.BaiViet.TieuDe</li>
            </ol>
        </nav>
    </div>
</section>


<!-- ===================== NỘI DUNG BÀI VIẾT ===================== -->
<section class="article-content section">
    <div class="container">
        <div class="row g-4 align-items-start">
            <div class="col-lg-8">
                <article class="main-article">
                    <!-- Article Header -->
                    <div class="article-header mb-4">
                        <div class="article-meta mb-3">
                            <span class="category badge bg-primary me-2">@Model.BaiViet.ChuyenMuc?.Ten</span>
                            <span class="date text-muted me-3">
                                <i class="fas fa-calendar me-1"></i>
                                @Model.BaiViet.NgayDang.ToString("dd/MM/yyyy")
                            </span>
                            <span class="author text-muted">
                                <i class="fas fa-user me-1"></i>
                                @(Model.BaiViet.TacGia?.HoTen ?? "Admin")
                            </span>
                        </div>
                        
                        <h1 class="article-title mb-3">@Model.BaiViet.TieuDe</h1>
                        
                        @if (!string.IsNullOrEmpty(Model.BaiViet.TomTat))
                        {
                            <p class="article-lead text-muted mb-4">@Model.BaiViet.TomTat</p>
                        }
                        
                    </div>

                    <!-- Video -->
                    @if (!string.IsNullOrEmpty(Model.BaiViet.VideoFile) || !string.IsNullOrEmpty(Model.BaiViet.VideoUrl))
                    {
                        <div class="article-video mb-4">
                            @if (!string.IsNullOrEmpty(Model.BaiViet.VideoFile))
                            {
                                <div class="video-container">
                                    <video controls class="img-fluid rounded shadow-sm" style="width: 100%; max-height: 500px;">
                                        <source src="@Model.BaiViet.VideoFile" type="video/mp4">
                                        Trình duyệt không hỗ trợ video.
                                    </video>
                                    @if (!string.IsNullOrEmpty(Model.BaiViet.VideoAlt))
                                    {
                                        <p class="video-caption text-muted mt-2 small text-center">@Model.BaiViet.VideoAlt</p>
                                    }
                                </div>
                            }
                            else if (!string.IsNullOrEmpty(Model.BaiViet.VideoUrl))
                            {
                                <div class="video-container">
                                    <div class="embed-responsive embed-responsive-16by9">
                                        @if (Model.BaiViet.VideoType == "youtube")
                                        {
                                            <iframe class="embed-responsive-item" src="@Model.BaiViet.VideoUrl" allowfullscreen></iframe>
                                        }
                                        else if (Model.BaiViet.VideoType == "vimeo")
                                        {
                                            <iframe class="embed-responsive-item" src="@Model.BaiViet.VideoUrl" allowfullscreen></iframe>
                                        }
                                        else
                                        {
                                            <iframe class="embed-responsive-item" src="@Model.BaiViet.VideoUrl" allowfullscreen></iframe>
                                        }
                                    </div>
                                    @if (!string.IsNullOrEmpty(Model.BaiViet.VideoAlt))
                                    {
                                        <p class="video-caption text-muted mt-2 small text-center">@Model.BaiViet.VideoAlt</p>
                                    }
                                </div>
                            }
                        </div>
                    }

                    <!-- ===================== ACCESSIBILITY CONTROLS ===================== -->
                    <div class="accessibility-controls bg-light rounded p-3 mb-4 border">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <!-- Brightness Control -->
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-moon me-2 text-muted"></i>
                                    <input type="range" class="form-range brightness-slider" id="brightnessSlider" 
                                           min="0.5" max="1.5" step="0.1" value="1" style="width: 120px;">
                                    <i class="fas fa-sun ms-2 text-muted"></i>
                                </div>
                            </div>
                            <div class="col-md-6 text-end">
                                <!-- Font Size Control -->
                                <div class="font-size-control-modern">
                                    <span class="font-size-label">Chọn cỡ chữ</span>
                                    <div class="font-size-buttons">
                                        <button class="font-size-btn" id="decreaseFont" title="Giảm cỡ chữ">
                                            a
                                        </button>
                                        <button class="font-size-btn" id="increaseFont" title="Tăng cỡ chữ">
                                            A
                                        </button>
                                    </div>
                                    
                                    <!-- Action Buttons -->
                                    <div class="ms-3 d-flex gap-1">
                                        <button class="btn btn-sm btn-outline-primary" id="printArticle" title="In bài viết">
                                            <i class="fas fa-print"></i>
                                        </button>
                                        @if (!User.IsInRole("Admin"))
                                        {
                                            <button class="btn btn-sm btn-outline-danger bookmark-btn" id="bookmarkArticle" title="Lưu dấu trang">
                                                <i class="fas fa-bookmark"></i>
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Article Body -->
                    <div class="article-body">
                        @Html.Raw(Model.BaiViet.NoiDung)
                    </div>
                    
                    @if (Model.BaiViet.BaiVietTags?.Any() == true)
                    {
                        <div class="article-tags mt-4">
                            <h6>Tags:</h6>
                            <div class="tags-list">
                                @foreach (var baiVietTag in Model.BaiViet.BaiVietTags)
                                {
                                    <span class="tag">#@baiVietTag.Tag?.Ten</span>
                                }
                            </div>
                        </div>
                    }
                    
                    <div class="article-footer mt-5">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <div class="article-info">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        Đăng lúc: @Model.BaiViet.NgayDang.ToString("HH:mm dd/MM/yyyy")
                                        <span class="ms-3">
                                            <i class="fas fa-eye me-1"></i>
                                            @Model.BaiViet.LuotXem lượt xem
                                        </span>
                                    </small>
                                </div>
                            </div>
                            <div class="col-md-6 text-md-end">
                                <a href="@Url.Action("TinTuc", "Home")" class="btn btn-outline-primary">
                                    <i class="fas fa-arrow-left me-2"></i>Quay lại tin tức
                                </a>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Chia sẻ mạng xã hội -->
                    <partial name="_SocialShare" model="Model.BaiViet" />
                    
                    <!-- Form bình luận -->
                    <partial name="_CommentForm" model="new WEB_CV.Models.BinhLuan { BaiVietId = Model.BaiViet.Id }" />
                    
                    <!-- Danh sách bình luận -->
                    <div id="comments-container">
                        <partial name="_CommentsList" model="new List<WEB_CV.Models.BinhLuan>()" />
                    </div>
                </article>
            </div>
            
            <!-- ===================== SIDEBAR ===================== -->
            <div class="col-lg-4">
                <aside class="article-sidebar">
                    <!-- Bài viết liên quan -->
                    @if (Model.BaiVietLienQuan.Any())
                    {
                        <div class="sidebar-widget">
                            <h5 class="widget-title">
                                <i class="fas fa-newspaper me-2"></i>
                                Bài viết liên quan
                            </h5>
                            <div class="related-posts">
                                @foreach (var relatedPost in Model.BaiVietLienQuan)
                                {
                                    <div class="related-post">
                                        <div class="related-image">
                                            @if (!string.IsNullOrEmpty(relatedPost.AnhTieuDe))
                                            {
                                                <img src="@relatedPost.AnhTieuDe" alt="@relatedPost.TieuDe" class="img-fluid">
                                            }
                                            else
                                            {
                                                <img src="~/media/news-placeholder.jpg" alt="@relatedPost.TieuDe" class="img-fluid">
                                            }
                                        </div>
                                        <div class="related-content">
                                            <h6><a href="@Url.Action("ChiTietBaiViet", "Home", new { id = relatedPost.Id })">@relatedPost.TieuDe</a></h6>
                                            <div class="post-meta">
                                                <small class="text-muted">
                                                    <i class="fas fa-calendar me-1"></i>
                                                    @relatedPost.NgayDang.ToString("dd/MM/yyyy")
                                                </small>
                                                <small class="text-muted ms-2">
                                                    <i class="fas fa-eye me-1"></i>
                                                    @relatedPost.LuotXem
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    
                    
                    <!-- Newsletter -->
                    <div class="sidebar-widget">
                        <h5 class="widget-title">Nhận tin tức</h5>
                        <div class="newsletter-sidebar">
                            <p class="small text-muted">Đăng ký để nhận những tin tức mới nhất về công nghệ GIS</p>
                            <form>
                                <div class="mb-3">
                                    <input type="email" class="form-control" placeholder="Email của bạn">
                                </div>
                                <button type="submit" class="btn btn-primary w-100">Đăng ký</button>
                            </form>
                        </div>
                    </div>
                    
                    <!-- Liên hệ -->
                    <div class="sidebar-widget">
                        <h5 class="widget-title">Liên hệ tư vấn</h5>
                        <div class="contact-sidebar">
                            <p class="small text-muted">Cần tư vấn về dịch vụ? Liên hệ ngay với chúng tôi!</p>
                            <div class="contact-info">
                                <div class="contact-item">
                                    <i class="fas fa-phone text-primary me-2"></i>
                                    <span>028 73077202</span>
                                </div>
                                <div class="contact-item">
                                    <i class="fas fa-envelope text-primary me-2"></i>
                                    <span>luanha2003@gmail.com</span>
                                </div>
                            </div>
                            <a href="@Url.Action("LienHe", "Home")" class="btn btn-outline-primary w-100 mt-3">
                                Liên hệ ngay
                            </a>
                        </div>
                    </div>
                    
                    <!-- Site Stats Counter -->
                    <div class="sidebar-widget">
                        @await Component.InvokeAsync("SiteStats")
                    </div>
                    
                    <!-- Website Links Widget -->
                    <div class="sidebar-widget">
                        @await Component.InvokeAsync("WebsiteLinks")
                    </div>
                </aside>
            </div>
        </div>
    </div>
</section>

<!-- ===================== ĐÁNH GIÁ BÀI VIẾT ===================== -->
<section class="section bg-white">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="article-rating">
                    <div class="rating-section">
                        <div class="rating-header">
                            <h5 class="rating-title">Đánh giá bài viết:</h5>
                            <div class="rating-stars">
                                <button class="star-btn" data-rating="1" title="1 sao">
                                    <i class="far fa-star"></i>
                                </button>
                                <button class="star-btn" data-rating="2" title="2 sao">
                                    <i class="far fa-star"></i>
                                </button>
                                <button class="star-btn" data-rating="3" title="3 sao">
                                    <i class="far fa-star"></i>
                                </button>
                                <button class="star-btn" data-rating="4" title="4 sao">
                                    <i class="far fa-star"></i>
                                </button>
                                <button class="star-btn" data-rating="5" title="5 sao">
                                    <i class="far fa-star"></i>
                                </button>
                            </div>
                        </div>
                        <div class="rating-stats">
                            <span class="rating-count">(lượt đánh giá: <span id="ratingCount">0</span>, trung bình: <span id="averageRating">0.0</span>)</span>
                        </div>
                    </div>
                    
                    <div class="divider"></div>
                    
                    <div class="social-share">
                        <span class="share-label">Chia sẻ:</span>
                        <div class="share-buttons">
                            <a href="#" class="share-btn facebook" title="Chia sẻ lên Facebook">
                                <i class="fab fa-facebook-f"></i>
                            </a>
                            <a href="#" class="share-btn twitter" title="Chia sẻ lên Twitter">
                                <i class="fab fa-twitter"></i>
                            </a>
                            <a href="#" class="share-btn linkedin" title="Chia sẻ lên LinkedIn">
                                <i class="fab fa-linkedin-in"></i>
                            </a>
                            <a href="#" class="share-btn copy" title="Sao chép link">
                                <i class="fas fa-link"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- ===================== BÀI VIẾT KHÁC ===================== -->
<section class="section bg-light">
    <div class="container">
        <div class="text-center mb-5">
            <h3>Bài viết khác</h3>
            <p class="text-muted">Khám phá thêm những tin tức và sự kiện mới nhất</p>
        </div>
        
        <!-- Slider Container -->
        <div class="news-slider-container position-relative">
            <!-- Slider Wrapper -->
            <div class="news-slider-wrapper overflow-hidden">
                <div class="news-slider d-flex" id="newsSlider">
                    @if (Model.BaiVietMoiNhat.Any())
                    {
                        @foreach (var post in Model.BaiVietMoiNhat)
                        {
                            <div class="news-slide">
                                <div class="news-card">
                                    <div class="news-image">
                                        @if (!string.IsNullOrEmpty(post.AnhTieuDe))
                                        {
                                            <img src="@post.AnhTieuDe" alt="@post.TieuDe" class="img-fluid">
                                        }
                                        else
                                        {
                                            <img src="~/media/news-placeholder.jpg" alt="@post.TieuDe" class="img-fluid">
                                        }
                                        <div class="news-category">@post.ChuyenMuc?.Ten</div>
                                    </div>
                                    <div class="news-content">
                                        <div class="news-meta">
                                            <span class="news-date">
                                                <i class="fas fa-calendar me-1"></i>@post.NgayDang.ToString("dd/MM/yyyy")
                                            </span>
                                        </div>
                                        <h5 class="news-title">
                                            <a href="@Url.Action("ChiTietBaiViet", "Home", new { id = post.Id })">@post.TieuDe</a>
                                        </h5>
                                        <p class="news-excerpt">@(post.TomTat?.Length > 100 ? post.TomTat.Substring(0, 100) + "..." : post.TomTat)</p>
                                        <a href="@Url.Action("ChiTietBaiViet", "Home", new { id = post.Id })" class="read-more">Đọc thêm <i class="fas fa-arrow-right"></i></a>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <!-- Fallback content -->
                        <div class="news-slide">
                            <div class="news-card">
                                <div class="news-image">
                                    <img src="~/media/news-placeholder.jpg" alt="Bài viết khác" class="img-fluid">
                                    <div class="news-category">Công nghệ</div>
                                </div>
                                <div class="news-content">
                                    <div class="news-meta">
                                        <span class="news-date">
                                            <i class="fas fa-calendar me-1"></i>20/08/2024
                                        </span>
                                    </div>
                                    <h5 class="news-title">
                                        <a href="#">Xu hướng công nghệ GIS 2024</a>
                                    </h5>
                                    <p class="news-excerpt">Tìm hiểu những xu hướng mới nhất trong lĩnh vực công nghệ thông tin địa lý và ứng dụng thực tế trong quản lý tài nguyên thiên nhiên...</p>
                                    <a href="#" class="read-more">Đọc thêm <i class="fas fa-arrow-right"></i></a>
                                </div>
                            </div>
                        </div>
                        
                        <div class="news-slide">
                            <div class="news-card">
                                <div class="news-image">
                                    <img src="~/media/news-placeholder.jpg" alt="Bài viết khác" class="img-fluid">
                                    <div class="news-category">Sự kiện</div>
                                </div>
                                <div class="news-content">
                                    <div class="news-meta">
                                        <span class="news-date">
                                            <i class="fas fa-calendar me-1"></i>18/08/2024
                                        </span>
                                    </div>
                                    <h5 class="news-title">
                                        <a href="#">Hội thảo công nghệ không gian 2024</a>
                                    </h5>
                                    <p class="news-excerpt">Tham gia hội thảo lớn nhất năm về công nghệ không gian và ứng dụng thực tế trong việc phát triển các dự án vệ tinh...</p>
                                    <a href="#" class="read-more">Đọc thêm <i class="fas fa-arrow-right"></i></a>
                                </div>
                            </div>
                        </div>
                        
                        <div class="news-slide">
                            <div class="news-card">
                                <div class="news-image">
                                    <img src="~/media/news-placeholder.jpg" alt="Bài viết khác" class="img-fluid">
                                    <div class="news-category">Tin tức</div>
                                </div>
                                <div class="news-content">
                                    <div class="news-meta">
                                        <span class="news-date">
                                            <i class="fas fa-calendar me-1"></i>15/08/2024
                                        </span>
                                    </div>
                                    <h5 class="news-title">
                                        <a href="#">Dự án thành phố thông minh tại Việt Nam</a>
                                    </h5>
                                    <p class="news-excerpt">Cập nhật tiến độ các dự án thành phố thông minh đang triển khai tại Việt Nam và những thách thức trong quá trình phát triển...</p>
                                    <a href="#" class="read-more">Đọc thêm <i class="fas fa-arrow-right"></i></a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            
            <!-- Navigation Buttons -->
            <button class="slider-btn slider-btn-prev" id="prevBtn" aria-label="Bài viết trước">
                <i class="fas fa-chevron-left"></i>
            </button>
            <button class="slider-btn slider-btn-next" id="nextBtn" aria-label="Bài viết tiếp">
                <i class="fas fa-chevron-right"></i>
            </button>
            
            <!-- Dots Indicator -->
            <div class="slider-dots" id="sliderDots"></div>
        </div>
        
        <div class="text-center mt-5">
            <a href="@Url.Action("TinTuc", "Home")" class="btn btn-primary btn-lg">
                Xem tất cả tin tức
            </a>
        </div>
    </div>
</section>

<script>
// Chức năng đếm lượt xem khi người dùng đọc bài viết
let viewCounted = false;
let articleRead = false;

// Hàm gửi request tăng lượt xem
async function incrementViewCount() {
    if (viewCounted) return;
    
    try {
        const response = await fetch('@Url.Action("IncrementViewCount", "Home")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
            },
            body: JSON.stringify(@Model.BaiViet.Id)
        });
        
        if (response.ok) {
            viewCounted = true;
            console.log('Đã tăng lượt xem');
        }
    } catch (error) {
        console.error('Lỗi khi tăng lượt xem:', error);
    }
}

// Intersection Observer để theo dõi khi người dùng đọc bài viết
const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.5 // Khi 50% nội dung hiển thị
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting && !articleRead) {
            articleRead = true;
            // Tăng lượt xem sau 2 giây để đảm bảo người dùng thực sự đọc
            setTimeout(() => {
                incrementViewCount();
            }, 2000);
        }
    });
}, observerOptions);

// Theo dõi nội dung bài viết
document.addEventListener('DOMContentLoaded', function() {
    const articleContent = document.querySelector('.article-body');
    if (articleContent) {
        observer.observe(articleContent);
    }
    
    // Tăng lượt xem khi người dùng cuộn xuống 70% trang
    let scrollCounted = false;
    window.addEventListener('scroll', () => {
        if (scrollCounted) return;
        
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const documentHeight = document.documentElement.scrollHeight - window.innerHeight;
        const scrollPercent = (scrollTop / documentHeight) * 100;
        
        if (scrollPercent > 70) {
            scrollCounted = true;
            incrementViewCount();
        }
    });
    
    // Tăng lượt xem khi người dùng ở lại trang hơn 30 giây
    setTimeout(() => {
        incrementViewCount();
    }, 30000);
});

document.addEventListener('DOMContentLoaded', function() {
    const slider = document.getElementById('newsSlider');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const dotsContainer = document.getElementById('sliderDots');
    
    if (!slider) return;
    
    const slides = slider.querySelectorAll('.news-slide');
    const totalSlides = slides.length;
    let currentSlide = 0;
    let slidesToShow = window.innerWidth < 768 ? 1 : 3;
    let maxSlide = Math.max(0, totalSlides - slidesToShow);
    
    // Tạo dots indicator
    function createDots() {
        dotsContainer.innerHTML = '';
        const totalPages = Math.ceil(totalSlides / slidesToShow);
        
        for (let i = 0; i < totalPages; i++) {
            const dot = document.createElement('button');
            dot.className = 'slider-dot';
            if (i === 0) dot.classList.add('active');
            dot.addEventListener('click', () => goToSlide(i * slidesToShow));
            dotsContainer.appendChild(dot);
        }
    }
    
    // Cập nhật vị trí slider
    function updateSlider() {
        const slideWidth = 100 / slidesToShow;
        const translateX = -currentSlide * slideWidth;
        slider.style.transform = `translateX(${translateX}%)`;
        
        // Cập nhật dots
        if (dotsContainer) {
            const activeDotIndex = Math.floor(currentSlide / slidesToShow);
            dotsContainer.querySelectorAll('.slider-dot').forEach((dot, index) => {
                if (dot && dot.classList) {
                    dot.classList.toggle('active', index === activeDotIndex);
                }
            });
        }
        
        // Ẩn/hiện nút điều hướng
        if (prevBtn) prevBtn.style.display = currentSlide === 0 ? 'none' : 'flex';
        if (nextBtn) nextBtn.style.display = currentSlide >= maxSlide ? 'none' : 'flex';
    }
    
    // Chuyển đến slide cụ thể
    function goToSlide(slideIndex) {
        currentSlide = Math.max(0, Math.min(slideIndex, maxSlide));
        updateSlider();
    }
    
    // Slide tiếp theo
    function nextSlide() {
        if (currentSlide < maxSlide) {
            currentSlide += slidesToShow;
            updateSlider();
        }
    }
    
    // Slide trước đó
    function prevSlide() {
        if (currentSlide > 0) {
            currentSlide -= slidesToShow;
            updateSlider();
        }
    }
    
    // Event listeners
    nextBtn.addEventListener('click', nextSlide);
    prevBtn.addEventListener('click', prevSlide);
    
    // Mouse drag support
    let startX = 0;
    let isDragging = false;
    let startTransform = 0;
    
    slider.addEventListener('mousedown', (e) => {
        startX = e.clientX;
        isDragging = true;
        startTransform = currentSlide * (100 / slidesToShow);
        slider.style.cursor = 'grabbing';
        slider.style.transition = 'none';
        e.preventDefault();
    });
    
    document.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        
        const currentX = e.clientX;
        const diff = startX - currentX;
        const slideWidth = 100 / slidesToShow;
        const newTransform = startTransform + (diff / slider.offsetWidth) * 100;
        
        slider.style.transform = `translateX(${-newTransform}%)`;
    });
    
    document.addEventListener('mouseup', (e) => {
        if (!isDragging) return;
        isDragging = false;
        slider.style.cursor = 'grab';
        slider.style.transition = 'transform 0.5s ease-in-out';
        
        const currentX = e.clientX;
        const diff = startX - currentX;
        const threshold = slider.offsetWidth * 0.1; // 10% threshold
        
        if (Math.abs(diff) > threshold) {
            if (diff > 0) {
                nextSlide();
            } else {
                prevSlide();
            }
        } else {
            updateSlider(); // Snap back
        }
    });
    
    // Touch/swipe support
    slider.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
        isDragging = true;
        startTransform = currentSlide * (100 / slidesToShow);
        slider.style.transition = 'none';
    });
    
    slider.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        e.preventDefault();
        
        const currentX = e.touches[0].clientX;
        const diff = startX - currentX;
        const slideWidth = 100 / slidesToShow;
        const newTransform = startTransform + (diff / slider.offsetWidth) * 100;
        
        slider.style.transform = `translateX(${-newTransform}%)`;
    });
    
    slider.addEventListener('touchend', (e) => {
        if (!isDragging) return;
        isDragging = false;
        slider.style.transition = 'transform 0.5s ease-in-out';
        
        const currentX = e.changedTouches[0].clientX;
        const diff = startX - currentX;
        const threshold = slider.offsetWidth * 0.1; // 10% threshold
        
        if (Math.abs(diff) > threshold) {
            if (diff > 0) {
                nextSlide();
            } else {
                prevSlide();
            }
        } else {
            updateSlider(); // Snap back
        }
    });
    
    // Auto-play (optional)
    let autoPlayInterval;
    
    function startAutoPlay() {
        autoPlayInterval = setInterval(() => {
            if (currentSlide >= maxSlide) {
                goToSlide(0);
            } else {
                nextSlide();
            }
        }, 5000); // 5 seconds
    }
    
    function stopAutoPlay() {
        clearInterval(autoPlayInterval);
    }
    
    // Start auto-play
    startAutoPlay();
    
    // Pause on hover
    slider.addEventListener('mouseenter', stopAutoPlay);
    slider.addEventListener('mouseleave', startAutoPlay);
    
    // Initialize
    createDots();
    updateSlider();
    
    // Responsive handling
    function handleResize() {
        const isMobile = window.innerWidth < 768;
        const newSlidesToShow = isMobile ? 1 : 3;
        
        if (newSlidesToShow !== slidesToShow) {
            slidesToShow = newSlidesToShow;
            maxSlide = Math.max(0, totalSlides - slidesToShow);
            currentSlide = Math.min(currentSlide, maxSlide);
            createDots();
            updateSlider();
        }
    }
    
    window.addEventListener('resize', handleResize);
});

// Rating functionality
document.addEventListener('DOMContentLoaded', function() {
    const starButtons = document.querySelectorAll('.star-btn');
    const ratingCount = document.getElementById('ratingCount');
    const averageRating = document.getElementById('averageRating');
    
    let currentRating = 0;
    let totalRatings = 0;
    let averageScore = 0;
    
    // Load saved rating from localStorage
    const articleId = @Model.BaiViet.Id;
    const savedRating = localStorage.getItem(`rating_${articleId}`);
    if (savedRating) {
        currentRating = parseInt(savedRating);
        updateStars(currentRating);
    }
    
    // Load rating stats (in real app, this would come from server)
    const ratingStats = JSON.parse(localStorage.getItem(`rating_stats_${articleId}`) || '{"count": 0, "average": 0}');
    totalRatings = ratingStats.count;
    averageScore = ratingStats.average;
    updateRatingInfo();
    
    starButtons.forEach((button, index) => {
        button.addEventListener('click', () => {
            const rating = index + 1;
            currentRating = rating;
            updateStars(rating);
            saveRating(rating);
        });
        
        button.addEventListener('mouseenter', () => {
            highlightStars(index + 1);
        });
    });
    
    document.querySelector('.rating-stars').addEventListener('mouseleave', () => {
        updateStars(currentRating);
    });
    
    function updateStars(rating) {
        starButtons.forEach((button, index) => {
            const icon = button.querySelector('i');
            if (index < rating) {
                icon.className = 'fas fa-star';
                button.classList.add('active');
            } else {
                icon.className = 'far fa-star';
                button.classList.remove('active');
            }
        });
    }
    
    function highlightStars(rating) {
        starButtons.forEach((button, index) => {
            const icon = button.querySelector('i');
            if (index < rating) {
                icon.className = 'fas fa-star';
            } else {
                icon.className = 'far fa-star';
            }
        });
    }
    
    function saveRating(rating) {
        // Save to localStorage (in real app, this would be sent to server)
        localStorage.setItem(`rating_${articleId}`, rating.toString());
        
        // Update stats
        totalRatings = Math.max(totalRatings, 1);
        averageScore = ((averageScore * (totalRatings - 1)) + rating) / totalRatings;
        
        const stats = {
            count: totalRatings,
            average: averageScore
        };
        localStorage.setItem(`rating_stats_${articleId}`, JSON.stringify(stats));
        
        updateRatingInfo();
        
        // Show thank you message
        showThankYouMessage();
    }
    
    function updateRatingInfo() {
        ratingCount.textContent = totalRatings;
        averageRating.textContent = averageScore.toFixed(1);
    }
    
    function showThankYouMessage() {
        const message = document.createElement('div');
        message.className = 'alert alert-success alert-dismissible fade show mt-3';
        message.innerHTML = `
            <i class="fas fa-check-circle me-2"></i>
            Cảm ơn bạn đã đánh giá bài viết!
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        
        document.querySelector('.article-rating').appendChild(message);
        
        // Auto remove after 3 seconds
        setTimeout(() => {
            if (message.parentNode) {
                message.remove();
            }
        }, 3000);
    }
});

// Load comments when page loads
document.addEventListener('DOMContentLoaded', function() {
    loadComments();
    trackCurrentUser();
});

// Track current user
function trackCurrentUser() {
    const userEmail = '@(User?.Identity?.IsAuthenticated == true ? User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value : null)';
    const userHoTen = '@(User?.Identity?.IsAuthenticated == true ? User.Identity.Name : null)';
    
    fetch('/api/OnlineUser/track', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            email: userEmail || null,
            hoTen: userHoTen || null
        })
    }).catch(error => {
        console.error('Error tracking user:', error);
    });
}


function loadComments() {
    fetch('@Url.Action("GetComments", "BinhLuan", new { baiVietId = Model.BaiViet.Id })')
        .then(response => response.text())
        .then(html => {
            document.getElementById('comments-container').innerHTML = html;
        })
        .catch(error => {
            console.error('Error loading comments:', error);
        });
}

// Reload comments after form submission
document.addEventListener('DOMContentLoaded', function() {
    const commentForm = document.querySelector('.comment-form');
    if (commentForm) {
        commentForm.addEventListener('submit', function(e) {
            // Show loading state
            const submitBtn = commentForm.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang gửi...';
            }
            
            // Let the form submit normally, then reload comments
            setTimeout(function() {
                loadComments();
                if (submitBtn) {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Gửi bình luận';
                }
            }, 2000);
        });
    }
});


// Thêm CSS cho NEW tag
const newTagStyle = document.createElement('style');
newTagStyle.textContent = `
  .new-tag {
    position: absolute !important;
    top: 4px !important;
    right: 4px !important;
    background: #dc3545 !important;
    color: white !important;
    padding: 2px 6px !important;
    border-radius: 3px !important;
    font-size: 8px !important;
    font-weight: bold !important;
    text-transform: uppercase !important;
    letter-spacing: 0.3px !important;
    z-index: 999 !important;
    box-shadow: 0 1px 3px rgba(0,0,0,0.3) !important;
    display: block !important;
    line-height: 1.2 !important;
  }
  
  .related-image {
    position: relative !important;
  }
  
  .news-image {
    position: relative !important;
  }
`;
document.head.appendChild(newTagStyle);

// ===================== ACCESSIBILITY FEATURES =====================
document.addEventListener('DOMContentLoaded', function() {
    // Font size control
    let currentFontSize = 100;
    // const fontDisplay = document.getElementById('fontSizeDisplay'); // Không cần nữa
    const decreaseBtn = document.getElementById('decreaseFont');
    const increaseBtn = document.getElementById('increaseFont');
    const articleBody = document.querySelector('.article-body');
    
    // Brightness control
    const brightnessSlider = document.getElementById('brightnessSlider');
    const body = document.body;
    
    // Bookmark control (chỉ hiển thị cho user thường, không cho admin)
    const bookmarkBtn = document.getElementById('bookmarkArticle');
    const articleId = @Model.BaiViet.Id;
    const articleTitle = '@Html.Raw(Model.BaiViet.TieuDe.Replace("'", "\\'"))';
    const articleUrl = window.location.href;
    
    // Print control
    const printBtn = document.getElementById('printArticle');
    
    // Font size functions
    function updateFontSize() {
        const fontSize = currentFontSize / 100;
        // Chỉ điều chỉnh nội dung bài viết, không phải tiêu đề
        if (articleBody) {
            articleBody.style.fontSize = fontSize + 'rem';
        }
        // Không cần hiển thị phần trăm nữa
        
        // Save to localStorage
        localStorage.setItem('articleFontSize', currentFontSize);
    }
    
    function decreaseFontSize() {
        if (currentFontSize > 75) {
            currentFontSize -= 25;
            updateFontSize();
        }
    }
    
    function increaseFontSize() {
        if (currentFontSize < 200) {
            currentFontSize += 25;
            updateFontSize();
        }
    }
    
    // Brightness functions
    function updateBrightness() {
        const brightness = brightnessSlider.value;
        // Chỉ áp dụng độ sáng cho nội dung bài viết, không phải toàn bộ trang
        const articleContent = document.querySelector('.main-article');
        if (articleContent) {
            articleContent.style.filter = `brightness(${brightness})`;
        }
        
        // Save to localStorage
        localStorage.setItem('articleBrightness', brightness);
    }
    
    // Bookmark functions
    function toggleBookmark() {
        const bookmarkBtn = document.querySelector('.bookmark-btn');
        if (!bookmarkBtn) return;
        
        let bookmarks = JSON.parse(localStorage.getItem('articleBookmarks') || '[]');
        const bookmarkIndex = bookmarks.findIndex(b => b.id === articleId);
        
        if (bookmarkIndex > -1) {
            // Remove bookmark
            bookmarks.splice(bookmarkIndex, 1);
            bookmarkBtn.innerHTML = '<i class="fas fa-bookmark"></i>';
            if (bookmarkBtn.classList) {
                bookmarkBtn.classList.remove('btn-danger');
                bookmarkBtn.classList.add('btn-outline-danger');
            }
            showNotification('Đã xóa khỏi dấu trang', 'success');
        } else {
            // Add bookmark
            bookmarks.push({
                id: articleId,
                title: articleTitle,
                url: articleUrl,
                date: new Date().toISOString()
            });
            bookmarkBtn.innerHTML = '<i class="fas fa-bookmark"></i>';
            if (bookmarkBtn.classList) {
                bookmarkBtn.classList.remove('btn-outline-danger');
                bookmarkBtn.classList.add('btn-danger');
            }
            showNotification('Đã lưu vào dấu trang', 'success');
        }
        
        localStorage.setItem('articleBookmarks', JSON.stringify(bookmarks));
    }
    
    function checkBookmarkStatus() {
        const bookmarkBtn = document.querySelector('.bookmark-btn');
        if (!bookmarkBtn) return;
        
        let bookmarks = JSON.parse(localStorage.getItem('articleBookmarks') || '[]');
        const isBookmarked = bookmarks.some(b => b.id === articleId);
        
        if (isBookmarked) {
            bookmarkBtn.innerHTML = '<i class="fas fa-bookmark"></i>';
            if (bookmarkBtn.classList) {
                bookmarkBtn.classList.remove('btn-outline-danger');
                bookmarkBtn.classList.add('btn-danger');
            }
        }
    }
    
    // Print function
    function printArticle() {
        // Tạo cửa sổ in với chỉ nội dung bài viết
        const printWindow = window.open('', '_blank');
        const articleContent = document.querySelector('.main-article').innerHTML;
        const articleTitle = document.querySelector('.article-title').textContent;
        
        printWindow.document.write(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>${articleTitle}</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 20px; }
                    .article-title { font-size: 24px; font-weight: bold; margin-bottom: 20px; }
                    .article-body { font-size: 14px; line-height: 1.6; }
                    .article-body img { max-width: 100%; height: auto; }
                    @@media print { body { margin: 0; } }
                </style>
            </head>
            <body>
                ${articleContent}
            </body>
            </html>
        `);
        printWindow.document.close();
        printWindow.print();
    }
    
    // Notification function
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
        notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
        notification.innerHTML = `
            <i class="fas fa-check-circle me-2"></i>
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
        document.body.appendChild(notification);
        
        // Auto remove after 3 seconds
        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 3000);
    }
    
    // Event listeners
    decreaseBtn.addEventListener('click', decreaseFontSize);
    increaseBtn.addEventListener('click', increaseFontSize);
    brightnessSlider.addEventListener('input', updateBrightness);
    bookmarkBtn.addEventListener('click', toggleBookmark);
    printBtn.addEventListener('click', printArticle);
    
    // Load saved settings
    const savedFontSize = localStorage.getItem('articleFontSize');
    if (savedFontSize) {
        currentFontSize = parseInt(savedFontSize);
        updateFontSize();
    }
    
    const savedBrightness = localStorage.getItem('articleBrightness');
    if (savedBrightness) {
        brightnessSlider.value = savedBrightness;
        updateBrightness();
    }
    
    // Check bookmark status (chỉ cho user thường, không cho admin)
    if (bookmarkBtn) checkBookmarkStatus();
});
</script>
