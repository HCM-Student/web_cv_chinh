@using WEB_CV.Models
@model InternalNotice
@{
    ViewData["Title"] = Model.Title;
    var nowUtc = DateTime.UtcNow;
}

@{
    Layout = "_Layout";
}

@section Styles{
<style>
:root{
  --primary: #0d56b3;
  --primary-dark: #0a4a98;
  --secondary: #6c757d;
  --success: #28a745;
  --info: #17a2b8;
  --warning: #ffc107;
  --danger: #dc3545;
  --light: #f8f9fa;
  --dark: #343a40;
  --border: #dee2e6;
  --shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  --shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);
}

/* HERO SECTION */
.hero-section {
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
    color: white;
    padding: 2rem 0;
    margin-bottom: 2rem;
}

.hero-section h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    text-shadow: 0 2px 4px rgba(0,0,0,0.3);
}

.hero-section .breadcrumb {
    background: none;
    padding: 0;
    margin: 0;
}

.hero-section .breadcrumb-item {
    color: rgba(255,255,255,0.8);
}

.hero-section .breadcrumb-item.active {
    color: white;
    font-weight: 600;
}

.hero-section .breadcrumb-item + .breadcrumb-item::before {
    color: rgba(255,255,255,0.6);
    content: "›";
    font-size: 1.2rem;
}

/* NOTICE DETAIL */
.notice-detail {
    background: white;
    border-radius: 12px;
    box-shadow: var(--shadow);
    margin-bottom: 2rem;
    overflow: hidden;
}

.notice-header {
    background: var(--light);
    padding: 2rem;
    border-bottom: 1px solid var(--border);
}

.notice-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--dark);
    margin-bottom: 1rem;
    line-height: 1.3;
}

.notice-meta {
    display: flex;
    gap: 2rem;
    align-items: center;
    flex-wrap: wrap;
    margin-bottom: 1rem;
}

.meta-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--secondary);
    font-size: 0.95rem;
}

.meta-item i {
    color: var(--primary);
    font-size: 1.1rem;
}

.notice-badges {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
}

.badge {
    font-size: 0.8rem;
    padding: 0.5rem 1rem;
    border-radius: 25px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
}

.badge-pinned {
    background: #fff3cd;
    color: #856404;
    border: 1px solid #ffeaa7;
}

.badge-new {
    background: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
}

.badge-expired {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

.notice-content {
    padding: 2rem;
}

.notice-summary {
    background: #f8f9fa;
    border-left: 4px solid var(--primary);
    padding: 1.5rem;
    margin-bottom: 2rem;
    border-radius: 0 8px 8px 0;
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--dark);
}

.notice-body {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--dark);
    margin-bottom: 2rem;
}

.notice-body h1, .notice-body h2, .notice-body h3, .notice-body h4, .notice-body h5, .notice-body h6 {
    color: var(--dark);
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-weight: 600;
}

.notice-body h1 { font-size: 1.8rem; }
.notice-body h2 { font-size: 1.6rem; }
.notice-body h3 { font-size: 1.4rem; }
.notice-body h4 { font-size: 1.2rem; }

.notice-body p {
    margin-bottom: 1.5rem;
}

.notice-body ul, .notice-body ol {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
}

.notice-body li {
    margin-bottom: 0.5rem;
}

.notice-body blockquote {
    border-left: 4px solid var(--primary);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--secondary);
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 0 8px 8px 0;
}

.notice-body img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 1.5rem 0;
    box-shadow: var(--shadow);
}

.notice-footer {
    background: var(--light);
    padding: 1.5rem 2rem;
    border-top: 1px solid var(--border);
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
}

.notice-author {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--secondary);
}

.notice-author i {
    color: var(--primary);
    font-size: 1.2rem;
}

.notice-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.btn {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
}

.btn-primary {
    background: var(--primary);
    color: white;
}

.btn-primary:hover {
    background: var(--primary-dark);
    color: white;
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

.btn-outline-secondary {
    background: transparent;
    color: var(--secondary);
    border: 2px solid var(--border);
}

.btn-outline-secondary:hover {
    background: var(--secondary);
    color: white;
    border-color: var(--secondary);
}

/* RESPONSIVE */
@@media (max-width: 768px) {
    .hero-section h1 {
        font-size: 2rem;
    }
    
    .notice-title {
        font-size: 1.5rem;
    }
    
    .notice-meta {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }
    
    .notice-header, .notice-content, .notice-footer {
        padding: 1.5rem;
    }
    
    .notice-footer {
        flex-direction: column;
        align-items: flex-start;
    }
}

@@media (max-width: 576px) {
    .hero-section {
        padding: 1.5rem 0;
    }
    
    .hero-section h1 {
        font-size: 1.75rem;
    }
    
    .notice-title {
        font-size: 1.25rem;
    }
    
    .notice-header, .notice-content, .notice-footer {
        padding: 1rem;
    }
    
    .notice-actions {
        flex-direction: column;
        width: 100%;
    }
    
    .btn {
        width: 100%;
        justify-content: center;
    }
}
</style>
}

<!-- HERO SECTION -->
<section class="hero-section">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("ThongBaoNoiBo", "Home")">Thông báo nội bộ</a></li>
                <li class="breadcrumb-item active">Chi tiết</li>
            </ol>
        </nav>
        <h1>Chi tiết thông báo</h1>
    </div>
</section>

<div class="container">
    <div class="notice-detail">
        <!-- NOTICE HEADER -->
        <div class="notice-header">
            <h1 class="notice-title">@Model.Title</h1>
            
            <div class="notice-meta">
                <div class="meta-item">
                    <i class="bi bi-calendar3"></i>
                    <span>Ngày đăng: @Model.PublishAt.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</span>
                </div>
                
                @if (Model.ExpireAt.HasValue)
                {
                    <div class="meta-item">
                        <i class="bi bi-clock"></i>
                        <span>Hết hạn: @Model.ExpireAt.Value.ToLocalTime().ToString("dd/MM/yyyy")</span>
                    </div>
                }
                
                <div class="meta-item">
                    <i class="bi bi-person-badge"></i>
                    <span>Đăng bởi: @(string.IsNullOrWhiteSpace(Model.CreatedByName) ? "Hệ thống" : Model.CreatedByName)</span>
                </div>
            </div>
            
            <div class="notice-badges">
                @{
                    var isExpired = Model.ExpireAt.HasValue && Model.ExpireAt.Value < nowUtc;
                    var isNew = (nowUtc - Model.PublishAt).TotalDays <= 3;
                }
                
                @if (Model.IsPinned)
                {
                    <span class="badge badge-pinned">
                        <i class="bi bi-pin-angle"></i>Ghim
                    </span>
                }
                @if (isNew && Model.IsActive && !isExpired)
                {
                    <span class="badge badge-new">
                        <i class="bi bi-star"></i>Mới
                    </span>
                }
                @if (isExpired)
                {
                    <span class="badge badge-expired">
                        <i class="bi bi-clock-history"></i>Hết hạn
                    </span>
                }
            </div>
        </div>
        
        <!-- NOTICE CONTENT -->
        <div class="notice-content">
            @if (!string.IsNullOrWhiteSpace(Model.Summary))
            {
                <div class="notice-summary">
                    <strong>Tóm tắt:</strong><br>
                    @Model.Summary
                </div>
            }
            
            @if (!string.IsNullOrWhiteSpace(Model.Body))
            {
                <div class="notice-body">
                    @Html.Raw(Model.Body)
                </div>
            }
            else if (!string.IsNullOrWhiteSpace(Model.Summary))
            {
                <div class="notice-body">
                    @Html.Raw(Model.Summary)
                </div>
            }
        </div>
        
        <!-- NOTICE FOOTER -->
        <div class="notice-footer">
            <div class="notice-author">
                <i class="bi bi-person-circle"></i>
                <span>Đăng bởi: <strong>@(string.IsNullOrWhiteSpace(Model.CreatedByName) ? "Hệ thống" : Model.CreatedByName)</strong></span>
            </div>
            
            <div class="notice-actions">
                <a href="@Url.Action("ThongBaoNoiBo", "Home")" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i>Quay lại
                </a>
                <button type="button" class="btn btn-primary" onclick="window.print()">
                    <i class="bi bi-printer"></i>In thông báo
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Print functionality
    window.print = function() {
        window.print();
    };
    
    // Add smooth scrolling for internal links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
    
    // Add loading state to buttons
    document.querySelectorAll('.btn').forEach(btn => {
        btn.addEventListener('click', function() {
            if (this.classList.contains('btn-primary')) {
                this.innerHTML = '<i class="bi bi-hourglass-split"></i>Đang xử lý...';
                this.disabled = true;
            }
        });
    });
});
</script>
}
