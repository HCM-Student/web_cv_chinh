@model IEnumerable<WEB_CV.Models.LienHe>
@{
    ViewData["Title"] = "Quản lý Liên hệ";
}

<div class="admin-contact-page">
    @if (TempData["msg"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            @TempData["msg"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Header Section -->
    <div class="page-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="page-title">
                    <div class="title-icon">
                        <span style="font-size: 1.8rem;">✉️</span>
                    </div>
                    <div class="title-content">
                        <span class="title-text">Quản lý Liên hệ</span>
                        <span class="contacts-count">@Model.Count() tin nhắn</span>
                    </div>
                </h1>
                <p class="page-subtitle text-muted">Dưới đây là danh sách các tin nhắn được gửi từ form liên hệ</p>
            </div>
            <div class="d-flex align-items-center gap-3">
                <div class="view-options">
                    <button class="view-btn active" data-view="grid" title="Xem dạng lưới">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                            <rect x="1" y="1" width="6" height="6" rx="1"/>
                            <rect x="9" y="1" width="6" height="6" rx="1"/>
                            <rect x="1" y="9" width="6" height="6" rx="1"/>
                            <rect x="9" y="9" width="6" height="6" rx="1"/>
                        </svg>
                    </button>
                    <button class="view-btn" data-view="list" title="Xem dạng danh sách">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                            <rect x="2" y="3" width="12" height="1.5" rx="0.75"/>
                            <rect x="2" y="6" width="9" height="1.5" rx="0.75"/>
                            <rect x="2" y="9" width="11" height="1.5" rx="0.75"/>
                            <rect x="2" y="12" width="7" height="1.5" rx="0.75"/>
                        </svg>
                    </button>
                </div>
                <div class="contact-stats">
                    <div class="stat-badge">
                        <i class="fas fa-message me-1"></i>
                        <span>@Model.Count() tin nhắn</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Contact Messages Grid View -->
    <div class="contacts-grid" id="gridView">
        @foreach (var item in Model)
        {
            <div class="contact-item">
                <div class="contact-card">
                    <div class="contact-header">
                        <div class="contact-avatar">
                            <div class="avatar-circle">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="online-indicator"></div>
                        </div>
                        <div class="contact-info">
                            <h5 class="contact-name">@item.HoTen</h5>
                            <div class="contact-meta">
                                <span class="contact-time">
                                    <i class="fas fa-clock me-1"></i>
                                    @item.NgayGui.ToString("dd/MM/yyyy HH:mm")
                                </span>
                                <div class="contact-status">
                                    <span class="status-badge status-@(item.TrangThai.Replace(" ", "-").ToLower())">@item.TrangThai</span>
                                    <span class="contact-id">#@item.Id</span>
                                </div>
                            </div>
                        </div>
                        <div class="contact-actions">
                            <a asp-action="Details" asp-route-id="@item.Id" class="action-btn view-btn" title="Xem chi tiết">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="action-btn delete-btn" title="Xóa">
                                <i class="fas fa-trash"></i>
                            </a>
                        </div>
                    </div>
                    
                    <div class="contact-content">
                        @if (!string.IsNullOrEmpty(item.TieuDe))
                        {
                            <div class="contact-subject">
                                <i class="fas fa-tag me-2"></i>
                                <strong>@item.TieuDe</strong>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(item.NoiDung))
                        {
                            <div class="contact-message">
                                <i class="fas fa-quote-left me-2"></i>
                                @(item.NoiDung.Length > 120 ? item.NoiDung.Substring(0, 120) + "..." : item.NoiDung)
                            </div>
                        }
                    </div>
                    
                    <div class="contact-footer">
                        <div class="contact-details">
                            <div class="contact-email">
                                <div class="detail-icon">
                                    <i class="fas fa-envelope"></i>
                                </div>
                                <a href="mailto:@item.Email" class="detail-link">@item.Email</a>
                            </div>
                            <div class="contact-phone">
                                <div class="detail-icon">
                                    <i class="fas fa-phone"></i>
                                </div>
                                <a href="tel:@item.SoDienThoai" class="detail-link">@item.SoDienThoai</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Contact Messages List View -->
    <div class="contacts-list" id="listView" style="display: none;">
        <div class="list-container">
            @foreach (var item in Model)
            {
                <div class="list-item">
                    <div class="list-avatar">
                        <div class="avatar-circle">
                            <i class="fas fa-user"></i>
                        </div>
                        <div class="online-indicator"></div>
                    </div>
                    <div class="list-content">
                        <div class="list-header">
                            <h6 class="list-name">@item.HoTen</h6>
                            <span class="list-id">#@item.Id</span>
                        </div>
                        @if (!string.IsNullOrEmpty(item.TieuDe))
                        {
                            <div class="list-subject">
                                <i class="fas fa-tag me-1"></i>
                                <strong>@item.TieuDe</strong>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(item.NoiDung))
                        {
                            <div class="list-message">
                                @(item.NoiDung.Length > 80 ? item.NoiDung.Substring(0, 80) + "..." : item.NoiDung)
                            </div>
                        }
                        <div class="list-meta">
                            <span class="list-email">
                                <i class="fas fa-envelope me-1"></i>
                                <a href="mailto:@item.Email">@item.Email</a>
                            </span>
                            <span class="list-phone">
                                <i class="fas fa-phone me-1"></i>
                                <a href="tel:@item.SoDienThoai">@item.SoDienThoai</a>
                            </span>
                            <span class="list-time">
                                <i class="fas fa-clock me-1"></i>
                                @item.NgayGui.ToString("dd/MM/yyyy HH:mm")
                            </span>
                        </div>
                    </div>
                    <div class="list-actions">
                        <a asp-action="Details" asp-route-id="@item.Id" class="action-btn view-btn" title="Xem chi tiết">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="action-btn delete-btn" title="Xóa">
                            <i class="fas fa-trash"></i>
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
    
    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-inbox"></i>
            </div>
            <h4>Chưa có tin nhắn nào</h4>
            <p>Chưa có tin nhắn liên hệ nào được gửi từ form liên hệ.</p>
        </div>
    }
</div>

<style>
.admin-contact-page {
    padding: 2rem;
    background: linear-gradient(135deg, #4f46e5 0%, #06b6d4 100%);
    min-height: 100vh;
    position: relative;
}

.admin-contact-page::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
    opacity: 0.3;
    pointer-events: none;
}

.page-header {
    margin-bottom: 3rem;
    position: relative;
    z-index: 2;
}

.page-title {
    font-size: 2.5rem;
    font-weight: 800;
    margin: 0;
    color: white;
    text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    display: flex;
    align-items: center;
    gap: 1.5rem;
}

.title-icon {
    width: 60px;
    height: 60px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;
}

.title-icon span {
    font-size: 1.8rem;
    color: white;
    display: block;
}

.title-icon:hover {
    transform: translateY(-2px);
    background: rgba(255, 255, 255, 0.3);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
}

.title-content {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.title-text {
    font-size: 2.5rem;
    font-weight: 800;
    color: white;
    line-height: 1.2;
    text-shadow: 0 2px 4px rgba(0,0,0,0.3);
}

.contacts-count {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    padding: 0.4rem 0.8rem;
    border-radius: 15px;
    font-size: 0.9rem;
    font-weight: 600;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;
    align-self: flex-start;
}

.page-subtitle {
    font-size: 1.2rem;
    margin: 0.5rem 0 0 0;
    color: rgba(255,255,255,0.9);
}

.contact-stats {
    display: flex;
    align-items: center;
}

.stat-badge {
    background: rgba(255,255,255,0.2);
    backdrop-filter: blur(10px);
    color: white;
    padding: 1rem 2rem;
    border-radius: 30px;
    font-weight: 700;
    box-shadow: 0 8px 32px rgba(0,0,0,0.2);
    border: 1px solid rgba(255,255,255,0.3);
    font-size: 1.1rem;
}

/* Contacts Grid */
.contacts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
    gap: 2rem;
    position: relative;
    z-index: 2;
}

/* Contact Item Styles */
.contact-item {
    position: relative;
}

.contact-card {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    overflow: hidden;
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    border: 1px solid #e9ecef;
    position: relative;
}

.contact-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #4f46e5, #06b6d4);
    border-radius: 16px 16px 0 0;
}

.contact-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0,0,0,0.12);
    border-color: #4f46e5;
}

.contact-header {
    padding: 1.25rem;
    border-bottom: 1px solid #f1f3f4;
    display: flex;
    align-items: center;
    gap: 1rem;
    position: relative;
}

.contact-avatar {
    position: relative;
    flex-shrink: 0;
}

.avatar-circle {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #4f46e5 0%, #06b6d4 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.2rem;
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(79, 70, 229, 0.2);
}

.avatar-circle::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, rgba(255,255,255,0.2), transparent);
    border-radius: 50%;
}

.online-indicator {
    position: absolute;
    bottom: 1px;
    right: 1px;
    width: 12px;
    height: 12px;
    background: #10b981;
    border-radius: 50%;
    border: 2px solid white;
    box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);
}

@@keyframes pulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.1); opacity: 0.7; }
    100% { transform: scale(1); opacity: 1; }
}

.contact-info {
    flex: 1;
    min-width: 0;
}

.contact-name {
    font-size: 1.1rem;
    font-weight: 600;
    color: #1f2937;
    margin: 0 0 0.25rem 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.contact-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.85rem;
    color: #6b7280;
    gap: 0.75rem;
}

.contact-time {
    display: flex;
    align-items: center;
    font-weight: 500;
}

.contact-status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex-shrink: 0;
}

.status-badge {
    padding: 0.25rem 0.6rem;
    border-radius: 8px;
    font-size: 0.7rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.3px;
}

.status-chưa-đọc {
    background: #fef2f2;
    color: #dc2626;
    border: 1px solid #fecaca;
}

.status-đang-xử-lý {
    background: #fffbeb;
    color: #d97706;
    border: 1px solid #fed7aa;
}

.status-đã-xử-lý {
    background: #f0fdf4;
    color: #16a34a;
    border: 1px solid #bbf7d0;
}

.status-hoàn-thành {
    background: #eff6ff;
    color: #2563eb;
    border: 1px solid #bfdbfe;
}

.contact-id {
    background: #f3f4f6;
    color: #6b7280;
    padding: 0.2rem 0.5rem;
    border-radius: 6px;
    font-size: 0.7rem;
    font-weight: 600;
    white-space: nowrap;
    border: 1px solid #e5e7eb;
}

.contact-actions {
    display: flex;
    gap: 0.4rem;
    opacity: 0;
    transition: all 0.3s ease;
    flex-shrink: 0;
}

.contact-card:hover .contact-actions {
    opacity: 1;
}

.action-btn {
    width: 32px;
    height: 32px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    font-size: 0.8rem;
    transition: all 0.3s ease;
    border: 1px solid #e5e7eb;
    position: relative;
    overflow: hidden;
}

.action-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, rgba(255,255,255,0.2), transparent);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.action-btn:hover::before {
    opacity: 1;
}

.view-btn {
    background: #f0f9ff;
    color: #0284c7;
    border-color: #bae6fd;
}

.view-btn:hover {
    background: #0284c7;
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(2, 132, 199, 0.3);
}

.delete-btn {
    background: #fef2f2;
    color: #dc2626;
    border-color: #fecaca;
}

.delete-btn:hover {
    background: #dc2626;
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(220, 38, 38, 0.3);
}

.contact-content {
    padding: 1.25rem;
    flex: 1;
}

.contact-subject {
    font-size: 0.95rem;
    font-weight: 600;
    color: #374151;
    margin-bottom: 0.75rem;
    line-height: 1.4;
    display: flex;
    align-items: center;
    padding: 0.5rem 0.75rem;
    background: #f8fafc;
    border-radius: 8px;
    border-left: 3px solid #4f46e5;
}

.contact-message {
    font-size: 0.9rem;
    color: #6b7280;
    line-height: 1.5;
    margin-bottom: 1rem;
    display: flex;
    align-items: flex-start;
    padding: 0.75rem;
    background: #f9fafb;
    border-radius: 8px;
    border-left: 3px solid #e5e7eb;
}

.contact-footer {
    padding: 1rem 1.25rem;
    background: #f8fafc;
    border-top: 1px solid #e5e7eb;
}

.contact-details {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.contact-email,
.contact-phone {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.5rem 0.75rem;
    background: white;
    border-radius: 8px;
    border: 1px solid #e5e7eb;
    transition: all 0.3s ease;
}

.contact-email:hover,
.contact-phone:hover {
    transform: translateX(2px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    border-color: #4f46e5;
}

.detail-icon {
    width: 32px;
    height: 32px;
    background: #4f46e5;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.8rem;
    flex-shrink: 0;
}

.detail-link {
    color: #374151;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.85rem;
    transition: color 0.3s ease;
}

.detail-link:hover {
    color: #4f46e5;
    text-decoration: none;
}

/* Empty State */
.empty-state {
    text-align: center;
    padding: 6rem 2rem;
    background: rgba(255,255,255,0.95);
    backdrop-filter: blur(20px);
    border-radius: 24px;
    box-shadow: 0 20px 60px rgba(0,0,0,0.1);
    border: 1px solid rgba(255,255,255,0.2);
    position: relative;
    z-index: 2;
}

.empty-icon {
    font-size: 5rem;
    color: #adb5bd;
    margin-bottom: 2rem;
    opacity: 0.7;
}

.empty-state h4 {
    color: #6c757d;
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 700;
}

.empty-state p {
    color: #adb5bd;
    margin: 0;
    font-size: 1.1rem;
}

/* Responsive */
@@media (max-width: 768px) {
    .admin-contact-page {
        padding: 1rem;
    }
    
    .contacts-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }
    
    .contact-header {
        padding: 1rem;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
    }
    
    .contact-meta {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
        width: 100%;
    }
    
    .contact-status {
        align-items: flex-start;
        flex-direction: row;
        gap: 0.5rem;
        flex-wrap: wrap;
    }
    
    .contact-actions {
        opacity: 1;
        align-self: flex-end;
        margin-top: 0.25rem;
    }
    
    .contact-content {
        padding: 1rem;
    }
    
    .contact-footer {
        padding: 1rem;
    }
    
    .contact-details {
        flex-direction: column;
    }
    
    .page-title {
        font-size: 2rem;
        gap: 1rem;
    }
    
    .title-icon {
        width: 50px;
        height: 50px;
    }
    
    .title-icon span {
        font-size: 1.5rem;
    }
    
    .title-text {
        font-size: 2rem;
    }
}

/* View Options - Neumorphic Design */
.view-options {
    display: flex;
    gap: 0.5rem;
    background: #e0e0e0;
    padding: 0.5rem;
    border-radius: 20px;
    box-shadow: 
        inset 6px 6px 12px rgba(0, 0, 0, 0.15),
        inset -6px -6px 12px rgba(255, 255, 255, 0.8);
}

.view-btn {
    width: 40px;
    height: 40px;
    border: none;
    background: transparent;
    color: #999;
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.view-btn:hover {
    color: #666;
    transform: translateY(-1px);
}

.view-btn.active {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    box-shadow: 
        6px 6px 12px rgba(0, 0, 0, 0.2),
        -3px -3px 6px rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
}

.view-btn.active::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255,255,255,0.3), transparent);
    border-radius: 16px;
    pointer-events: none;
}

.view-btn svg {
    width: 16px;
    height: 16px;
    transition: all 0.3s ease;
}

.view-btn:hover svg {
    transform: scale(1.1);
}

/* List View Styles */
.contacts-list {
    position: relative;
    z-index: 2;
}

.list-container {
    background: rgba(255,255,255,0.95);
    backdrop-filter: blur(20px);
    border-radius: 20px;
    padding: 1.5rem;
    box-shadow: 0 12px 40px rgba(0,0,0,0.1);
    border: 1px solid rgba(255,255,255,0.2);
}

.list-item {
    display: flex;
    align-items: center;
    padding: 1.5rem;
    border-bottom: 1px solid rgba(0,0,0,0.05);
    transition: all 0.3s ease;
    border-radius: 12px;
    margin-bottom: 0.5rem;
}

.list-item:hover {
    background: rgba(79, 70, 229, 0.05);
    transform: translateX(5px);
}

.list-item:last-child {
    border-bottom: none;
    margin-bottom: 0;
}

.list-avatar {
    position: relative;
    margin-right: 1.5rem;
    flex-shrink: 0;
}

.list-content {
    flex: 1;
    min-width: 0;
}

.list-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
}

.list-name {
    font-size: 1.1rem;
    font-weight: 700;
    color: #2c3e50;
    margin: 0;
}

.list-id {
    background: linear-gradient(135deg, #4f46e5, #06b6d4);
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 15px;
    font-size: 0.8rem;
    font-weight: 600;
}

.list-subject {
    font-size: 0.95rem;
    font-weight: 600;
    color: #4f46e5;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
}

.list-message {
    font-size: 0.9rem;
    color: #6c757d;
    line-height: 1.4;
    margin-bottom: 0.75rem;
}

.list-meta {
    display: flex;
    gap: 1.5rem;
    font-size: 0.85rem;
    color: #6c757d;
}

.list-email a,
.list-phone a {
    color: #4f46e5;
    text-decoration: none;
    font-weight: 500;
}

.list-email a:hover,
.list-phone a:hover {
    text-decoration: underline;
}

.list-actions {
    display: flex;
    gap: 0.5rem;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.list-item:hover .list-actions {
    opacity: 1;
}

.list-actions .action-btn {
    width: 35px;
    height: 35px;
    font-size: 0.9rem;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const viewButtons = document.querySelectorAll('.view-btn');
    const gridView = document.getElementById('gridView');
    const listView = document.getElementById('listView');
    
    viewButtons.forEach(button => {
        button.addEventListener('click', function() {
            // Remove active class from all buttons
            viewButtons.forEach(btn => btn.classList.remove('active'));
            
            // Add active class to clicked button
            this.classList.add('active');
            
            // Show/hide views based on data-view attribute
            const viewType = this.getAttribute('data-view');
            
            if (viewType === 'grid') {
                gridView.style.display = 'grid';
                listView.style.display = 'none';
            } else {
                gridView.style.display = 'none';
                listView.style.display = 'block';
            }
        });
    });
});
</script>